#include <stdio.h>
#include <stdlib.h>

int main() {
    int n;

    printf("Enter the size of the matrices (must be a power of 2): ");
    scanf("%d", &n);

    int A[n][n], B[n][n], C[n][n];
    int i, j;

    // Input matrix A
    printf("Enter matrix A:\n");
    for (i = 0; i < n; i++)
        for (j = 0; j < n; j++)
            scanf("%d", &A[i][j]);

    // Input matrix B
    printf("Enter matrix B:\n");
    for (i = 0; i < n; i++)
        for (j = 0; j < n; j++)
            scanf("%d", &B[i][j]);

    // Declare temporary matrices
    int A11[n/2][n/2], A12[n/2][n/2], A21[n/2][n/2], A22[n/2][n/2];
    int B11[n/2][n/2], B12[n/2][n/2], B21[n/2][n/2], B22[n/2][n/2];
    int M1[n/2][n/2], M2[n/2][n/2], M3[n/2][n/2], M4[n/2][n/2];
    int M5[n/2][n/2], M6[n/2][n/2], M7[n/2][n/2];
    int C11[n/2][n/2], C12[n/2][n/2], C21[n/2][n/2], C22[n/2][n/2];
    int temp1[n/2][n/2], temp2[n/2][n/2];

    // Divide the matrices into submatrices
    for (i = 0; i < n/2; i++) {
        for (j = 0; j < n/2; j++) {
            A11[i][j] = A[i][j];
            A12[i][j] = A[i][j + n/2];
            A21[i][j] = A[i + n/2][j];
            A22[i][j] = A[i + n/2][j + n/2];

            B11[i][j] = B[i][j];
            B12[i][j] = B[i][j + n/2];
            B21[i][j] = B[i + n/2][j];
            B22[i][j] = B[i + n/2][j + n/2];
        }
    }

    // Calculate M1 to M7
    // M1 = (A11 + A22) * (B11 + B22)
    for (i = 0; i < n/2; i++) {
        for (j = 0; j < n/2; j++) {
            temp1[i][j] = A11[i][j] + A22[i][j];
            temp2[i][j] = B11[i][j] + B22[i][j];
        }
    }
    for (i = 0; i < n/2; i++)
        for (j = 0; j < n/2; j++)
            M1[i][j] = temp1[i][j] * temp2[i][j];

    // M2 = (A21 + A22) * B11
    for (i = 0; i < n/2; i++) {
        for (j = 0; j < n/2; j++) {
            temp1[i][j] = A21[i][j] + A22[i][j];
        }
    }
    for (i = 0; i < n/2; i++)
        for (j = 0; j < n/2; j++)
            M2[i][j] = temp1[i][j] * B11[i][j];

    // M3 = A11 * (B12 - B22)
    for (i = 0; i < n/2; i++) {
        for (j = 0; j < n/2; j++) {
            temp2[i][j] = B12[i][j] - B22[i][j];
        }
    }
    for (i = 0; i < n/2; i++)
        for (j = 0; j < n/2; j++)
            M3[i][j] = A11[i][j] * temp2[i][j];

    // M4 = A22 * (B21 - B11)
    for (i = 0; i < n/2; i++) {
        for (j = 0; j < n/2; j++) {
            temp2[i][j] = B21[i][j] - B11[i][j];
        }
    }
    for (i = 0; i < n/2; i++)
        for (j = 0; j < n/2; j++)
            M4[i][j] = A22[i][j] * temp2[i][j];

    // M5 = (A11 + A12) * B22
    for (i = 0; i < n/2; i++) {
        for (j = 0; j < n/2; j++) {
            temp1[i][j] = A11[i][j] + A12[i][j];
        }
    }
    for (i = 0; i < n/2; i++)
        for (j = 0; j < n/2; j++)
            M5[i][j] = temp1[i][j] * B22[i][j];

    // M6 = (A21 - A11) * (B11 + B12)
    for (i = 0; i < n/2; i++) {
        for (j = 0; j < n/2; j++) {
            temp1[i][j] = A21[i][j] - A11[i][j];
            temp2[i][j] = B11[i][j] + B12[i][j];
        }
    }
    for (i = 0; i < n/2; i++)
        for (j = 0; j < n/2; j++)
            M6[i][j] = temp1[i][j] * temp2[i][j];

    // M7 = (A12 - A22) * (B21 + B22)
    for (i = 0; i < n/2; i++) {
        for (j = 0; j < n/2; j++) {
            temp1[i][j] = A12[i][j] - A22[i][j];
            temp2[i][j] = B21[i][j] + B22[i][j];
        }
    }
    for (i = 0; i < n/2; i++)
        for (j = 0; j < n/2; j++)
            M7[i][j] = temp1[i][j] * temp2[i][j];

    // Calculate C11, C12, C21, C22
    for (i = 0; i < n/2; i++) {
        for (j = 0; j < n/2; j++) {
            C11[i][j] = M1[i][j] + M4[i][j] - M5[i][j] + M7[i][j];
            C12[i][j] = M3[i][j] + M5[i][j];
            C21[i][j] = M2[i][j] + M4[i][j];
            C22[i][j] = M1[i][j] - M2[i][j] + M3[i][j] + M6[i][j];
        }
    }

    // Combine the 4 submatrices into C
    for (i = 0; i < n/2; i++) {
        for (j = 0; j < n/2; j++) {
            C[i][j] = C11[i][j];
            C[i][j + n/2] = C12[i][j];
            C[i + n/2][j] = C21[i][j];
            C[i + n/2][j + n/2] = C22[i][j];
        }
    }

    // Print the resulting matrix C
    printf("Resulting Matrix C:\n");
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            printf("%d ", C[i][j]);
        }
        printf("\n");
    }

    return 0;
}
